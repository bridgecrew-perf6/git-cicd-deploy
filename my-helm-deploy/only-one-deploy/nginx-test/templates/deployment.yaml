apiVersion: apps/v1
kind: Deployment
metadata:  
  labels:
    app: virtlet    
  name: virtlet
  namespace: argo-my-test  
spec:  
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.target: virtlet-template      
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.target: virtlet-template         
    spec:
      containers:
      - image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
        ports:
        - containerPort: 8080
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: virtlet-template
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      
---
apiVersion: apps/v1
kind: Deployment
metadata:  
  labels:
    app: virtlet-preview   
  name: virtlet-preview
  namespace: argo-my-test  
spec:  
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.target: virtlet-template-preview 
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.target: virtlet-template-preview     
    spec:
      containers:
      - image: "{{.Values.image.pre_repository}}:{{.Values.image.pre_tag}}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: virtlet-template
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      